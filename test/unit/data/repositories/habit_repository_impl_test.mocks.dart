// Mocks generated by Mockito 5.4.5 from annotations
// in habitquest/test/unit/data/repositories/habit_repository_impl_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:habitquest/data/datasources/local/hive_datasource.dart' as _i2;
import 'package:habitquest/data/models/achievement_model.dart' as _i7;
import 'package:habitquest/data/models/habit_completion_model.dart' as _i6;
import 'package:habitquest/data/models/habit_model.dart' as _i5;
import 'package:habitquest/data/models/user_model.dart' as _i4;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [HiveDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockHiveDataSource extends _i1.Mock implements _i2.HiveDataSource {
  MockHiveDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<_i4.UserModel?> getCurrentUser() => (super.noSuchMethod(
        Invocation.method(
          #getCurrentUser,
          [],
        ),
        returnValue: _i3.Future<_i4.UserModel?>.value(),
      ) as _i3.Future<_i4.UserModel?>);

  @override
  _i3.Future<void> saveUser(_i4.UserModel? user) => (super.noSuchMethod(
        Invocation.method(
          #saveUser,
          [user],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<void> updateUser(_i4.UserModel? user) => (super.noSuchMethod(
        Invocation.method(
          #updateUser,
          [user],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<List<_i5.HabitModel>> getAllHabits() => (super.noSuchMethod(
        Invocation.method(
          #getAllHabits,
          [],
        ),
        returnValue: _i3.Future<List<_i5.HabitModel>>.value(<_i5.HabitModel>[]),
      ) as _i3.Future<List<_i5.HabitModel>>);

  @override
  _i3.Future<List<_i5.HabitModel>> getActiveHabits() => (super.noSuchMethod(
        Invocation.method(
          #getActiveHabits,
          [],
        ),
        returnValue: _i3.Future<List<_i5.HabitModel>>.value(<_i5.HabitModel>[]),
      ) as _i3.Future<List<_i5.HabitModel>>);

  @override
  _i3.Future<_i5.HabitModel?> getHabitById(String? id) => (super.noSuchMethod(
        Invocation.method(
          #getHabitById,
          [id],
        ),
        returnValue: _i3.Future<_i5.HabitModel?>.value(),
      ) as _i3.Future<_i5.HabitModel?>);

  @override
  _i3.Future<void> saveHabit(_i5.HabitModel? habit) => (super.noSuchMethod(
        Invocation.method(
          #saveHabit,
          [habit],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<void> updateHabit(_i5.HabitModel? habit) => (super.noSuchMethod(
        Invocation.method(
          #updateHabit,
          [habit],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<void> deleteHabit(String? id) => (super.noSuchMethod(
        Invocation.method(
          #deleteHabit,
          [id],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<List<_i6.HabitCompletionModel>> getAllCompletions() =>
      (super.noSuchMethod(
        Invocation.method(
          #getAllCompletions,
          [],
        ),
        returnValue: _i3.Future<List<_i6.HabitCompletionModel>>.value(
            <_i6.HabitCompletionModel>[]),
      ) as _i3.Future<List<_i6.HabitCompletionModel>>);

  @override
  _i3.Future<List<_i6.HabitCompletionModel>> getCompletionsForHabit(
          String? habitId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getCompletionsForHabit,
          [habitId],
        ),
        returnValue: _i3.Future<List<_i6.HabitCompletionModel>>.value(
            <_i6.HabitCompletionModel>[]),
      ) as _i3.Future<List<_i6.HabitCompletionModel>>);

  @override
  _i3.Future<_i6.HabitCompletionModel?> getCompletionById(String? id) =>
      (super.noSuchMethod(
        Invocation.method(
          #getCompletionById,
          [id],
        ),
        returnValue: _i3.Future<_i6.HabitCompletionModel?>.value(),
      ) as _i3.Future<_i6.HabitCompletionModel?>);

  @override
  _i3.Future<void> saveCompletion(_i6.HabitCompletionModel? completion) =>
      (super.noSuchMethod(
        Invocation.method(
          #saveCompletion,
          [completion],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<void> updateCompletion(_i6.HabitCompletionModel? completion) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateCompletion,
          [completion],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<void> deleteCompletion(String? id) => (super.noSuchMethod(
        Invocation.method(
          #deleteCompletion,
          [id],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<List<_i6.HabitCompletionModel>> getCompletionsInDateRange(
    String? habitId,
    DateTime? startDate,
    DateTime? endDate,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #getCompletionsInDateRange,
          [
            habitId,
            startDate,
            endDate,
          ],
        ),
        returnValue: _i3.Future<List<_i6.HabitCompletionModel>>.value(
            <_i6.HabitCompletionModel>[]),
      ) as _i3.Future<List<_i6.HabitCompletionModel>>);

  @override
  _i3.Future<_i6.HabitCompletionModel?> getTodaysCompletion(String? habitId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getTodaysCompletion,
          [habitId],
        ),
        returnValue: _i3.Future<_i6.HabitCompletionModel?>.value(),
      ) as _i3.Future<_i6.HabitCompletionModel?>);

  @override
  _i3.Future<List<_i7.AchievementModel>> getAllAchievements() =>
      (super.noSuchMethod(
        Invocation.method(
          #getAllAchievements,
          [],
        ),
        returnValue: _i3.Future<List<_i7.AchievementModel>>.value(
            <_i7.AchievementModel>[]),
      ) as _i3.Future<List<_i7.AchievementModel>>);

  @override
  _i3.Future<List<_i7.AchievementModel>> getUnlockedAchievements() =>
      (super.noSuchMethod(
        Invocation.method(
          #getUnlockedAchievements,
          [],
        ),
        returnValue: _i3.Future<List<_i7.AchievementModel>>.value(
            <_i7.AchievementModel>[]),
      ) as _i3.Future<List<_i7.AchievementModel>>);

  @override
  _i3.Future<void> saveAchievement(_i7.AchievementModel? achievement) =>
      (super.noSuchMethod(
        Invocation.method(
          #saveAchievement,
          [achievement],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<void> updateAchievement(_i7.AchievementModel? achievement) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateAchievement,
          [achievement],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<_i7.AchievementModel?> getAchievementById(String? id) =>
      (super.noSuchMethod(
        Invocation.method(
          #getAchievementById,
          [id],
        ),
        returnValue: _i3.Future<_i7.AchievementModel?>.value(),
      ) as _i3.Future<_i7.AchievementModel?>);

  @override
  _i3.Future<void> deleteAchievement(String? id) => (super.noSuchMethod(
        Invocation.method(
          #deleteAchievement,
          [id],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<void> clearAllData() => (super.noSuchMethod(
        Invocation.method(
          #clearAllData,
          [],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<bool> hasData() => (super.noSuchMethod(
        Invocation.method(
          #hasData,
          [],
        ),
        returnValue: _i3.Future<bool>.value(false),
      ) as _i3.Future<bool>);

  @override
  _i3.Future<Map<String, dynamic>> getStatistics() => (super.noSuchMethod(
        Invocation.method(
          #getStatistics,
          [],
        ),
        returnValue:
            _i3.Future<Map<String, dynamic>>.value(<String, dynamic>{}),
      ) as _i3.Future<Map<String, dynamic>>);
}
